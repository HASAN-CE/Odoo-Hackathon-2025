# Generated by Django 5.2.7 on 2025-10-04 06:40

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApprovalRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('rule_type', models.CharField(choices=[('SEQUENTIAL', 'Sequential Approval'), ('PERCENTAGE', 'Percentage Based'), ('SPECIFIC_APPROVER', 'Specific Approver'), ('HYBRID', 'Hybrid Rule')], max_length=30)),
                ('min_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('max_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('approval_percentage', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('requires_manager_approval', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'approval_rules',
                'ordering': ['-priority', 'min_amount'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=100)),
                ('currency_code', models.CharField(max_length=10)),
                ('currency_symbol', models.CharField(blank=True, max_length=10, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Companies',
                'db_table': 'companies',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('MANAGER', 'Manager'), ('EMPLOYEE', 'Employee')], default='EMPLOYEE', max_length=20)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('employee_id', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', related_query_name='custom_user', to='auth.group', verbose_name='groups')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subordinates', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_set', related_query_name='custom_user', to='auth.permission', verbose_name='user permissions')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='adminFunc.company')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ApprovalStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_number', models.IntegerField()),
                ('can_auto_approve', models.BooleanField(default=False)),
                ('approval_rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approval_steps', to='adminFunc.approvalrule')),
                ('approver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approval_steps', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'approval_steps',
                'ordering': ['step_number'],
                'unique_together': {('approval_rule', 'step_number')},
            },
        ),
        migrations.AddField(
            model_name='approvalrule',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approval_rules', to='adminFunc.company'),
        ),
        migrations.CreateModel(
            name='CurrencyExchangeRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_currency', models.CharField(max_length=10)),
                ('target_currency', models.CharField(max_length=10)),
                ('rate', models.DecimalField(decimal_places=6, max_digits=10)),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'currency_exchange_rates',
                'indexes': [models.Index(fields=['base_currency', 'target_currency', 'date'], name='currency_ex_base_cu_ae7ce5_idx')],
                'unique_together': {('base_currency', 'target_currency', 'date')},
            },
        ),
        migrations.CreateModel(
            name='ExpenseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expense_categories', to='adminFunc.company')),
            ],
            options={
                'verbose_name_plural': 'Expense Categories',
                'db_table': 'expense_categories',
                'unique_together': {('name', 'company')},
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expense_number', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('currency_code', models.CharField(max_length=10)),
                ('converted_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('conversion_rate', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('expense_date', models.DateField()),
                ('merchant_name', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PENDING', 'Pending Approval'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=20)),
                ('current_approval_step', models.IntegerField(default=0)),
                ('receipt_image', models.FileField(blank=True, null=True, upload_to='receipts/%Y/%m/')),
                ('receipt_ocr_data', models.JSONField(blank=True, null=True)),
                ('employee_notes', models.TextField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='adminFunc.company')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='expenses', to='adminFunc.expensecategory')),
            ],
            options={
                'db_table': 'expenses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='approvalrule',
            name='categories',
            field=models.ManyToManyField(blank=True, related_name='approval_rules', to='adminFunc.expensecategory'),
        ),
        migrations.CreateModel(
            name='ExpenseComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('is_internal', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='adminFunc.expense')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expense_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'expense_comments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExpenseLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('quantity', models.DecimalField(decimal_places=2, default=1, max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='adminFunc.expensecategory')),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_items', to='adminFunc.expense')),
            ],
            options={
                'db_table': 'expense_lines',
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('CREATE', 'Create'), ('UPDATE', 'Update'), ('DELETE', 'Delete'), ('APPROVE', 'Approve'), ('REJECT', 'Reject'), ('SUBMIT', 'Submit'), ('CANCEL', 'Cancel')], max_length=20)),
                ('model_name', models.CharField(max_length=100)),
                ('object_id', models.IntegerField()),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'audit_logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'created_at'], name='audit_logs_user_id_fbfd51_idx'), models.Index(fields=['model_name', 'object_id'], name='audit_logs_model_n_656046_idx')],
            },
        ),
        migrations.CreateModel(
            name='ExpenseApproval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_number', models.IntegerField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('comments', models.TextField(blank=True, null=True)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('actioned_at', models.DateTimeField(blank=True, null=True)),
                ('approval_step', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='adminFunc.approvalstep')),
                ('approver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approvals_given', to=settings.AUTH_USER_MODEL)),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approvals', to='adminFunc.expense')),
            ],
            options={
                'db_table': 'expense_approvals',
                'ordering': ['step_number', 'assigned_at'],
                'unique_together': {('expense', 'step_number', 'approver')},
            },
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['status', 'employee'], name='expenses_status_5f453a_idx'),
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['expense_number'], name='expenses_expense_003f04_idx'),
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['company', 'status'], name='expenses_company_4436bb_idx'),
        ),
    ]
